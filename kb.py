from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

btnBack = KeyboardButton(text="üîô –ù–∞–∑–∞–¥")

only_back_kb = ReplyKeyboardMarkup(
    keyboard=[[btnBack]],
    resize_keyboard=True
)

btnStart = KeyboardButton(text="–°—Ç–∞—Ä—Ç")

button1 = KeyboardButton(text="üöÄ –í—ã–π—Ç–∏ –Ω–∞ —Å–ª–æ—Ç")
button2 = KeyboardButton(text="üè† –£–π—Ç–∏ —Å–æ —Å–ª–æ—Ç–∞")
button3 = KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ—Ç")

btnCoordinatorStart = KeyboardButton(text="üöÄ –í—ã–π—Ç–∏ –Ω–∞ —Å–º–µ–Ω—É")
btnCoordinatorEnd = KeyboardButton(text="üè† –£–π—Ç–∏ —Å–æ —Å–º–µ–Ω—ã")
btnCoordinatorSearch = KeyboardButton(text="üîé –°–ø–∏—Å–æ–∫")

btnCoordinatorDelegate = InlineKeyboardButton(text="–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å", callback_data="handler_delegate")
btnCoordinatorDeny = InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="handler_deny")
btnCoordinatorBack = InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="handler_coord_back")
btnCoordinatorDenyBack = InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="handler_deny_back")

btnYes = KeyboardButton(text='–î–∞')
btnNo = KeyboardButton(text='–ù–µ—Ç')

btnScout = KeyboardButton(text="–°–∫–∞—É—Ç")
btnCoordinator = KeyboardButton(text="–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä")
btnAdmin = KeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
btnBoss = KeyboardButton(text='–ë–æ—Å—Å')
btnsScout = KeyboardButton(text='–°–ò–¢')
btnNoRole = KeyboardButton(text="non-role")

btnAdmin1 = KeyboardButton(text="üîë –ù–∞–∑–Ω–∞—á–∏—Ç—å")
btnAdmin2 = KeyboardButton(text="‚öôÔ∏è –ù–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∑–æ–Ω")

def create_dynamic_keyboard(button_texts, max_row_width=20):
    if not button_texts:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –Ω–µ –±—ã–ª –ø—É—Å—Ç—ã–º
        raise ValueError("–°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –ø—É—Å—Ç. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.")
    
    keyboard_rows = []  # –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ –∫–Ω–æ–ø–æ–∫
    current_row = []  # –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–Ω–æ–ø–æ–∫

    for text in button_texts:
        if sum(len(btn.text) for btn in current_row) + len(current_row) + len(text) > max_row_width:
            keyboard_rows.append(current_row)
            current_row = []

        current_row.append(KeyboardButton(text=text))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
    if current_row:
        keyboard_rows.append(current_row)

    return ReplyKeyboardMarkup(keyboard=keyboard_rows, resize_keyboard=True)

start_kb = ReplyKeyboardMarkup(
    keyboard=[[btnStart]],
    resize_keyboard=True
)

submit_kb = ReplyKeyboardMarkup(
    keyboard=[[btnYes, btnNo]],
    resize_keyboard=True
)

admin_start_kb = ReplyKeyboardMarkup(
    keyboard=[[btnAdmin1, btnAdmin2]],
    resize_keyboard=True
)

admin_back_kb = ReplyKeyboardMarkup(
    keyboard=[[btnBack]],
    resize_keyboard=True
)

role_kb = ReplyKeyboardMarkup(
    keyboard=[[btnScout, btnCoordinator], [btnAdmin, btnsScout], [btnBoss, btnNoRole], [btnBack]],
    resize_keyboard=True
)

start_finish_kb = ReplyKeyboardMarkup(
    keyboard=[[button1, button2]],
    resize_keyboard=True,
)

scout_work_kb = ReplyKeyboardMarkup(
    keyboard=[[button3, button2]],
    resize_keyboard=True
)

task_list_kb = ReplyKeyboardMarkup(
    keyboard=[[]],
    resize_keyboard=True,
)

coordinator_kb = ReplyKeyboardMarkup(
    keyboard=[[btnCoordinatorStart, btnCoordinatorEnd, btnCoordinatorSearch]],
    resize_keyboard=True
)

reply_markup = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏–µ", callback_data="handler_accept")]
])

reply_markup_done = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–í—ã–ø–æ–ª–Ω–∏–ª", callback_data="handler_done_task")]
])

reply_markup_back = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="handler_done_back")]
])

reply_markup_problem = InlineKeyboardMarkup(
    inline_keyboard = [[btnCoordinatorDelegate, btnCoordinatorDeny]]
)

reply_markup_problem_back = InlineKeyboardMarkup(
    inline_keyboard = [[btnCoordinatorBack]]
)

reply_markup_deny_back = InlineKeyboardMarkup(
    inline_keyboard = [[btnCoordinatorDenyBack]]
)